// <auto-generated />
using LoLPlayerStatsSite.Db.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoLPlayerStatsSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250201100448_New Notes Column in ChampionRating")]
    partial class NewNotesColumninChampionRating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoLPlayerStatsSite.Db.Models.ChampionRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChampionImg")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lane")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("MyRating")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("ToLearn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChampionRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChampionImg = "https://static.wikia.nocookie.net/lolesports_gamepedia_en/images/1/18/AhriSquare.png/revision/latest?cb=20241024154252",
                            ChampionName = "Ahri",
                            Lane = "Mid",
                            MyRating = 10,
                            ToLearn = false
                        },
                        new
                        {
                            Id = 2,
                            ChampionImg = "https://static.wikia.nocookie.net/lolesports_gamepedia_en/images/5/58/NasusSquare.png/revision/latest?cb=20170802071450",
                            ChampionName = "Nasus",
                            Lane = "Top",
                            MyRating = 5,
                            ToLearn = false
                        },
                        new
                        {
                            Id = 3,
                            ChampionImg = "https://static.wikia.nocookie.net/lolesports_gamepedia_en/images/0/0f/JaxSquare.png/revision/latest?cb=20231012044232",
                            ChampionName = "Jax",
                            Lane = "Top",
                            MyRating = 3,
                            ToLearn = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
